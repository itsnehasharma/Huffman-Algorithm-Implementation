import java.io.*;

public class Main {

    public static void main (String [] args) throws FileNotFoundException, Exception{


        File file = new File("test.txt");

        HuffmanEncoder h = new HuffmanEncoder();

        System.out.println(h.getFrequencies(file));
        HuffTree tree = h.buildTree(file);

        System.out.println(h.encodeFile(file, tree).equals("011011000010110111111110011101010000010011000000011110011111111101101100110010111101011001011010011000000110010001011011100010000110000110100010010000110000101101001011010011011110110011011101000010000011101111100001110100110001000100111110111010111101001101100111111011010101010001000101100010011010001100100101011001010001111110000100100010000011110101101101010001110110000010010010100010011011010011001101110111111001011000111100101101111111101000000110111011100100011001010101010010001010111001111"));

//        System.out.println(h.decodeFile("01101100001011011111111001110101000001001100000" +
//                "00111100111111111011011001100101111010110010110100110000001100100010110111000100" +
//                "0011000011010001001000011000010110100101101001101111011001101110100001000001110111" +
//                "1100001110100110001000100111110111010111101001101100111111011010101010001000101100" +
//                "01001101000110010010101100101000111111000010010001000001111010110110101000111011000" +
//                "0100100101000100110110100110011011101111110010110001111001011011111111010000001101110" +
//                "11100100011001010101010010001010111001111",tree).equals("=a=az=a=aaaaaaaQaa==wQa_aaaaQaaaaaaaa=a=aQaQ=aaa==aQ=a=QaGaQ1=a=aa1zaza=1Qzaz=a=Q=a=Qa=aaa=aQa=aa=zwaa=aaaazaa=Qa11Qaaaa=aa==aaa=Qa=aQaaaaa=a====11=a1Qa=1aQQ==aQ=1aaaaazQ1waaa==a=a==1aa=awQQ=1Qa=a=QaQa=aa=aaaaaQ=a1aaaQ=a=aaaaaaa=Ga=aa=aaQ1aQ====Q1==aaQaaa"));


        String decoded = h.decodeFiletree);
        String correct = "=a=az=a=aaaaaaaQaa==wQa_aaaaQaaaaaaaa=a=aQaQ=aaa==aQ=a=QaGaQ1=a=aa1zaza=1Qzaz=a=Q=a=Qa=aaa=aQa=aa=zwaa=aaaazaa=Qa11Qaaaa=aa==aaa=Qa=aQaaaaa=a====11=a1Qa=1aQQ==aQ=1aaaaazQ1waaa==a=a==1aa=awQQ=1Qa=a=QaQa=aa=aaaaaQ=a1aaaQ=a=aaaaaaa=Ga=aa=aaQ1aQ====Q1==aaQaaa";
        System.out.println(decoded.equals(correct));
        System.out.println(h.traverseHuffmanTree(tree));



    }
}
